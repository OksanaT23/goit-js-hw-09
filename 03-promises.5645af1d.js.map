{"mappings":"AAAA,MAAMA,EAAeC,SAASC,cAAc,uBACtCC,EAAcF,SAASC,cAAc,sBACrCE,EAAWH,SAASC,cAAc,wBAGxC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAES,IAAIC,QAFTH,EAEiBI,IACjBC,YAAW,IAAMD,EAAQ,C,SAAEN,E,MAAUC,KAAUA,EAAM,EAIpC,CAACK,EAASE,KAC3BD,YAAW,IAAMC,EAAO,C,SAAER,E,MAAUC,KAAUA,EAAM,E,CAbxCN,SAASC,cAAc,yBAiC/Ba,iBAAiB,SAAS,SAAUC,GAC5CA,EAAMC,kBAhBR,SAA0BC,EAAYC,EAAWC,GAC/C,IAAK,IAAIC,EAAO,EAAGA,EAAOD,EAAQC,IAIhChB,EAHiBgB,EAAO,EACVH,EAAaG,EAAOF,GAG/BG,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,QAAQC,IAAI,uBAAqBlB,QAAiBC,MAAU,IAE7DkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBgB,QAAQC,IAAI,sBAAoBlB,QAAeC,MAAU,G,CAY/DmB,CAJmBC,SAAS3B,EAAa4B,MAAO,IAC9BD,SAASxB,EAAYyB,MAAO,IAC/BD,SAASvB,EAASwB,MAAO,I","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelayEl = document.querySelector('input[name=\"delay\"]');\nconst delayStepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    // Fulfill\n    return new Promise(resolve => {\n      setTimeout(() => resolve({ position, delay }), delay);\n    });\n  } else {\n    // Reject\n    return new Promise((resolve, reject) => {\n      setTimeout(() => reject({ position, delay }), delay);\n    });\n  }\n}\n\nfunction generatePromises(firstDelay, delayStep, amount) {\n  for (let step = 0; step < amount; step++) {\n    const position = step + 1;\n    const delay = firstDelay + step * delayStep;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nsubmitBtn.addEventListener('click', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(firstDelayEl.value, 10);\n  const delayStep = parseInt(delayStepEl.value, 10);\n  const amount = parseInt(amountEl.value, 10);\n\n  generatePromises(firstDelay, delayStep, amount);\n});"],"names":["$47d4ff9957288465$var$firstDelayEl","document","querySelector","$47d4ff9957288465$var$delayStepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","reject","addEventListener","event","preventDefault","firstDelay","delayStep","amount","step","then","console","log","catch","$47d4ff9957288465$var$generatePromises","parseInt","value"],"version":3,"file":"03-promises.5645af1d.js.map"}